name: Release Images

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

env:
  REGISTRY: images.canfar.net

jobs:
  prepare-matrix:
    if: ${{ github.repository == 'opencadc/deployments' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Generate build matrix
        id: generate
        run: python3 scripts/generate_release_matrix.py
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name || github.ref_name }}

  build-and-publish:
    needs: prepare-matrix
    if: ${{ needs.prepare-matrix.outputs.matrix != '' && github.repository == 'opencadc/deployments' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
      max-parallel: 3
    permissions:
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Log in to Harbor registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.CANFAR_HARBOR_ROBOT_PUBLISHER_USERNAME }}
          password: ${{ secrets.CANFAR_HARBOR_ROBOT_PUBLISHER_SECRET }}

      - name: Build & push ${{ matrix.name }}
        id: build
        uses: docker/build-push-action@v6.16.0
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ join(matrix.tags, '\n') }}
          build-args: ${{ matrix.build_args }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max
          sbom: true

      - name: Attest provenance
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-name: ${{ matrix.image }}
          subject-digest: ${{ steps.build.outputs.digest }}
          show-summary: true

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.2
        with:
          cosign-release: v2.4.3

      - name: Cosign container image
        run: |
          cosign version
          cosign sign --yes ${{ matrix.image }}@${{ steps.build.outputs.digest }} --upload
