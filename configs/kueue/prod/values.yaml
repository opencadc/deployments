# Helm Values for K8s Kueue Prod

# Enable prometheus metrics for the kueue controller.
enablePrometheus: true

# Kueue Controller Configuration
controllerManager:
  # Kueue Feature Gates, deprecated features excluded
  # Based on v0.10.0 retrieved on 2025-01-01
  # Source: https://kueue.sigs.k8s.io/docs/installation/
  featureGates:
    - name: LocalQueueMetrics
      enabled: true
  # Kueue Deployment Configuration
  manager:
    resources:
      limits:
        cpu: "2"
        memory: 1024Mi
      requests:
        cpu: "2"
        memory: 1024Mi

  readinessProbe:
    periodSeconds: 120
    timeoutSeconds: 60
    failureThreshold: 10

  livenessProbe:
    periodSeconds: 120
    timeoutSeconds: 60
    failureThreshold: 10

# controller_manager_config.yaml. controllerManager utilizes this yaml via manager-config Configmap.
managerConfig:
  controllerManagerConfigYaml: |-
    apiVersion: config.kueue.x-k8s.io/v1beta1
    kind: Configuration

    health:
      healthProbeBindAddress: :8081

    metrics:
      # Bind to for serving prometheus metrics, set to 0 to disable
      # Maps to metricsService.ClusterIP
      bindAddress: :8443
      # Report the cluster queue resource usage and quotas metrics
      enableClusterQueueResources: true

    webhook:
      port: 9443

    leaderElection:
      leaderElect: true
      resourceName: c1f6bfd2.kueue.x-k8s.io

    controller:
      # Number of concurrent reconciliation allowed for a controller.
      groupKindConcurrency:
        Job.batch: 256
        Pod: 4
        Workload.kueue.x-k8s.io: 256
        LocalQueue.kueue.x-k8s.io: 256
        ClusterQueue.kueue.x-k8s.io: 256
        ResourceFlavor.kueue.x-k8s.io: 4

    # Client connection details for the k8s_apiserver
    clientConnection:
      # queries/second allowed for k8s_apiserver
      qps: 64
      # extra queries to accumulate when a client is exceeding its rate.
      burst: 128

    # Controls whether or not Kueue reconciles jobs that don't set the annotation kueue.x-k8s.io/queue-name.
    # If set to true, then those jobs will be suspended and never started unless they are assigned a queue
    # and eventually admitted. This also applies to jobs created before starting the kueue controller.
    # Defaults to false; therefore, those jobs are not managed and if they are created unsuspended,
    # they will start immediately.
    manageJobsWithoutQueueName: false

    managedJobsNamespaceSelector:
      matchExpressions:
            - key: kubernetes.io/metadata.name
              operator: In
              values:
                - skaha-workload
                - canfar-b-workload

    integrations:
      # List of framewor to be integrated with Kueue.
      frameworks:
      - "batch/job"
      labelKeysToCopy:
      - canfar-net-sessionID
      - canfar-net-sessionName
      - canfar-net-sessionType
      - canfar-net-userid
      - batch.kubernetes.io/job-name
